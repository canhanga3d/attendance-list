import { useState, useEffect } from 'react';
import { Card } from '../../Components/Card';
import style from './style.module.scss';

export function Home() {
  const [studentName, setStudentName] = useState('');
  const [students, setStudents] = useState(() => {
    const savedStudents = localStorage.getItem('students');
    if (savedStudents) {
      return JSON.parse(savedStudents);
    } else {
      return [];
    }
  });

  useEffect(() => {
    localStorage.setItem('students', JSON.stringify(students));
  }, [students]);

  function handleStudents(e) {
    e.preventDefault();
    const name = studentName;
    const time = new Date().toLocaleTimeString('pt-AO', {
      hour: '2-digit',
      minute: '2-digit',
      second: '2-digit',
    });
    const newStudents = {
      name,
      time,
    };
    setStudents([...students, newStudents]);
    e.target.reset();
  }

  return (
    <main className={style.container}>
      <h1>Lista de Presença</h1>
      <form onSubmit={handleStudents}>
        <input
          type="text"
          name="name"
          id="name"
          placeholder="Digite o nome..."
          onChange={(e) => setStudentName(e.target.value)}
        />
        <button type="submit">Adicionar</button>
      </form>

      {students.map(({ name, time }) => (
        <Card name={name} time={time} key={time} />
      ))}
    </main>
  );
}



**************************************************************************


Header
Nessa aula, criamos uma tag <header> em nossa Home para indicar quem é o usuário que está editando a lista de presença.

index.jsx

import React, { useState } from "react";

import "./styles.css";
import { Card } from "../../components/Card";

export function Home() {
  const [studentName, setStudentName] = useState("");

  const [students, setStudents] = useState([]);

  function handleAddStudent() {
    const newStudent = {
      name: studentName,
      time: new Date().toLocaleTimeString("pt-BR", {
        hour: "2-digit",
        minute: "2-digit",
        second: "2-digit",
      }),
    };

    setStudents((prevState) => [...prevState, newStudent]);
  }

  return (
    <div className="container">
      <header>
        <h1>Lista de Presença</h1>
        <div>
          <strong>João Inácio</strong>
          <img src="https://github.com/birobirobiro.png" alt="Foto de perfil" />
        </div>
      </header>
      <input
        type="text"
        placeholder="Digite o nome..."
        onChange={(e) => setStudentName(e.target.value)}
      />
      <button type="button" onClick={handleAddStudent}>
        Adicionar
      </button>

      {students.map((student) => (
        <Card key={student.time} name={student.name} time={student.time} />
      ))}
    </div>
  );
}
styles.css

.container {
  display: flex;
  align-items: center;
  flex-direction: column;
}

.container header {
  width: 50%;
  margin: 84px 0 24px;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.container header img {
  width: 60px;
  height: 60px;
  border-radius: 30px;
  margin-left: 7px;
}

.container header div {
  display: flex;
  align-items: center;
}

.container input {
  width: 50%;
  padding: 24px;

  background: #e6e6e6;
  border-radius: 5px;
  border: none;

  font-size: 16px;
}

.container button {
  width: 50%;
  padding: 24px;

  font-weight: 700;

  background: #ea4c89;
  color: #fff;

  border-radius: 5px;
  margin: 12px 0 84px;
  border: none;

  cursor: pointer;
  transition: filter 0.2s;

  font-size: 16px;
}

.container button:hover {
  filter: brightness(0.9);
}
Resultado: